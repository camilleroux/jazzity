%article#scale
  %header
    %h1= @scale.title
    %p= @scale.information

  %nav#modes-list
    %ul
      - @scale.modes.each do |mode|
        %li= link_to_unless mode == @mode, mode, [@key, @scale, mode]

  %nav#key-selector
    %h2 Key:
    %ul
      - Key.primaries.each do |key|
        %li{:class => ("current" if @key == key)}= link_to_unless @key == key, key, [key, @scale, @mode]

  #mode
    %h2= @mode.title
    %h3= @mode.notes.join(", ")
    %p
      %label Steps:
      = @mode.step_names.join(", ")
    %p
      %label Intervals:
      = @mode.interval_names.join(", ")

    %section#staff
      .staff.scale-staff{"data-id" => @scale.id, "data-staff" => @mode.octavized_notes.map {|n| [n]}.to_json, "data-staff-clef" => "treble", "width" => 500}

    - unless @mode.chord_scales.empty?
      %nav.related-chords
        %h3 Related Chords:
        %ul.chords-list
          - @mode.chord_scales.each do |chord_scale|
            = render chord_scale.chord, :key => (@scale.key || Key.default).shifted(-1 * chord_scale.offset)

