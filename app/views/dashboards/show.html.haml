%section#search
  = form_tag searches_path do
    = label_tag :query, "Explore Jazz: "
    = text_field_tag :query, params[:query], "data-autocomplete" => "/searches/autocomplete"
    = submit_tag "Go"

#sidebar

%section#search-examples
  %h2 Search Examples: 
  %ul
    %li= link_to_search_example "Alone Together"
    %li= link_to_search_example "Autumn Leaves"
    %li= link_to_search_example "Rhythm Changes"
    %li= link_to_search_example "Blues"
  %ul
    %li= link_to_search_example "Eb Dorian"
    %li= link_to_search_example "C Major Scale"
    %li= link_to_search_example "Eb Lydian Augmented"
    %li= link_to_search_example "Tri-Tone Substitution"
  %ul
    %li= link_to_search_example "Ebmaj7"
    %li= link_to_search_example "C7alt"
    %li= link_to_search_example "G7#11"
    %li= link_to_search_example "F G B D"
  %ul
    %li= link_to_search_example "Eb G Bb D"
    %li= link_to_search_example "A C E G"
    %li= link_to_search_example "Dmin7, G7, Cmaj7"
    %li= link_to_search_example "D F A C, F G B D, C E G B"

%section#features-overview
  = render "shared/social_sharing"

  %h1 What is Jazzity?
  %article.introduction
    %p Jazzity is a knowledge engine for students of jazz.

  %article
    %h2 Explore Chord/Scale/Voicing Relationships
    %p
      Jazzity extensively understands chords, scales, and voicings. Learn and explore these relationships, and see them plotted in staff notation.
  %article
    %h2 Analyze a Note Sequence
    %p
      Search for a list of notes separated by commas, and Jazzity will analyze your input against it's knowledge of chords, scales, and progressions.
  %article
    %h2 Explore &amp; Track Jazz Tunes
    %p
      Jazzity's database of jazz standards connects you with the tunes you know and love.
  %article
    %h2 So, how is this done?
    %p
      The core of Jazzity is a mathematical model of jazz theory, allowing us to fully analyze - in real time - your input, sort of like 
      #{link_to "Wolfram Alpha", "http://www.wolframalpha.com/"}, but specific to Jazz!

%section#searchable-examples

  %ul.searchables-list
    - @searchables.each do |result|
      - model = result.respond_to?(:target) ? result.target : result

      %li.searchable
        = link_to path_to_searchable(result) do
          = render "searches/searchables/#{model.class.name.underscore}", :model => model, :result => result
